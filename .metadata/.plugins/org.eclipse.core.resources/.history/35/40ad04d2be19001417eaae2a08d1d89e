package ch.desm.middleware.modules.communication.endpoint.serial.ubw32;


public class EndpointUbw32RegisterDigital extends EndpointUbw32RegisterBase  {

	private static final int ALL_PINS_ON = 65535;
	
	/**
	 * 0 = output
	 * 1 = input
	 * 
	 * Pin-Mask
	 * default = 65535 = FF FF = 1111 1111  1111 1111 > all pins are configured for output
	 */
	private int pinBitMask;
	private EnumEndpointUbw32PortDigital enumPort;
	
	public EndpointUbw32RegisterDigital(EnumEndpointUbw32PortDigital enumPort, String pinBitMask){
		this.enumPort = enumPort;
		this.pinBitMask = Integer.parseInt(pinBitMask);
	}
	
	public void setPort(EnumEndpointUbw32PortDigital name){
		this.enumPort = name;
	}
	
	public EnumEndpointUbw32PortDigital getPort(){
		return enumPort;
	}
	
	public void setPins(int mask){
		if(!isPinMaskOk(mask)){
			try {
				throw new Exception("The pin mask has a wrong value.");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		pinBitMask = mask;
	}
	
	public int getPinBitMask(){
		return pinBitMask;
	}

	private boolean isPinMaskOk(int mask){
		if(mask < 0 || mask > ALL_PINS_ON) return false;
		
		return true;
	}
}
