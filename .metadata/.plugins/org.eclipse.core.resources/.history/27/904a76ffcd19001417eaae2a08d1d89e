package ch.desm.middleware.modules.communication.endpoint.serial.fabisch;

import java.util.ArrayList;


public class EndpointFabischCache {
	
	String stateI;
	ArrayList<String> statePI;
	
	public EndpointFabischCache(){
		this.stateI = "";
		this.statePI = new ArrayList<String>();
	}
	
	public boolean isStateChanged(String message){
		
		if (message.startsWith("I")){
			String oldState = stateI;
			stateI = message;
			
			return !message.equals(oldState);
		}
		
		// e.g. PI,G,8PI,0
		else if (message.startsWith("PI")){
			
			if(statePI.isEmpty()){
				statePI.add(message);
			} else{
				
				String[] messageParts = message.split(",");
				boolean contains = false;
				
				for(int i =0; i<statePI.size(); i++){
					String element = statePI.get(i);
					
					String [] elementParts = element.split(",");
					
					// [1] = register, [2] = pin
					if(elementParts[1].equals(messageParts[1])
							&& elementParts[2].equals(messageParts[2])){
						
						//is contained
						contains = true;
						
						// if parameter equal return false else true
						if(elementParts[3].equals(messageParts[3])){
							return false;
						}else{
							statePI.set(i, message);
							return true;
						}
					}
				}
				
				if(!contains){
					statePI.add(message);
				}
				
			}
		}
		
		return true;
	}	
}
