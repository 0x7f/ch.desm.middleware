package ch.desm.middleware.modules.communication.endpoint.tcp;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;

import org.apache.log4j.Logger;

import ch.desm.middleware.modules.communication.endpoint.EndpointCommon;

public class EndpointTcpClientImpl extends EndpointCommon {

	private static Logger log = Logger.getLogger(EndpointTcpClientImpl.class);
	public static final int CONNECTION_TIMEOUT = 5096;
	
	private EndpointTcpClientThread thread;
	protected Socket client;
	private String ip;
	private int port;
	private SocketAddress addr;
	
	public EndpointTcpClientImpl(String threadName, String ip, int port) {
		this.ip = ip;
		this.port = port;
		this.thread = new EndpointTcpClientThread(this);
		this.addr = new InetSocketAddress(ip, port);
		this.client = new Socket();
		initialize();
	}

	private void initialize() {
		try {
			
			client.connect(addr);
		} catch (IOException e) {
			log.error(e);
		}
	}
	
	public void receiveEvent(String message){
		super.onIncomingEndpointMessage(message);
	}

	public void start() {
		if(!thread.isAlive()){
			thread.run();
		}
	}

	public void stop() {
		if(thread.isAlive()){
			thread.interrupt();
		}
	}
	
	public void disconnect(){
		
		try {
			stop();
			client.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			log.error(e);
		}
	}
	
	
	public void connect(){
		
		try {
			stop();
			client.connect(addr);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			log.error(e);
		}
	}
	
}
