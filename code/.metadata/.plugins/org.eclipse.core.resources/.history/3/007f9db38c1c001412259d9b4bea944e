package ch.desm.middleware.modules.communication.endpoint.serial.ubw32;

import java.util.ArrayDeque;
import java.util.Deque;

/**
 * 
 */
public class EndpointUbw32Parser {

	private Deque<String> messages;
	private String buffer;

	public EndpointUbw32Parser() {
		messages = new ArrayDeque<String>();
		buffer = "";
	}

	public void addData(String data) {
		this.buffer = this.buffer + data;
		parseBuffer();
	}

	public String pop() {
		return this.messages.pollFirst();
	}

	private void parseBuffer() {
		if (buffer.isEmpty()) {
			return;
		}

		String message;
		while (true) {

			// first, try to pop all known messages
			
			while ((message = popMessageFromBuffer()) != null) {
				messages.addLast(message);
			}

			// yeah, empty!
			if (buffer.isEmpty()) {
				break;
			}
		}
	}

	private String popMessageFromBuffer() {
		
		int idx = buffer.indexOf("\r\r\n");
		if (idx > 0) {
			return popStringFromBuffer(idx+2);
		}

		return null;
	}

	private String popStringFromBuffer(int len) {
		String message = buffer.substring(0, len);
		buffer = buffer.substring(len);
		return message.replaceAll("OK", "");
	}

	public static void runTests() {

	}
}
